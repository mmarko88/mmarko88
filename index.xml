<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Professional developer</title><link>https://mmarko88.github.io/</link><description>Recent content on Professional developer</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 26 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mmarko88.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>I Asked a Java Champion: What Is the Biggest Problem That Professional Java Developers Are Facing Today?</title><link>https://mmarko88.github.io/post/java/victor_biggest_problem_for_java_devs/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><guid>https://mmarko88.github.io/post/java/victor_biggest_problem_for_java_devs/</guid><description>I Asked a Java Champion: What Is the Biggest Problem That Professional Java Developers Are Facing Today? I have attended the workshop that is organized by the ITKonekt. The workshop was about efficient coding practices for best performance in Java. Java Champion Victor Rentea did a great job explaining all java internals, tools, hibernate, threads, collections, garbage collections, and much more. It was very enjoyable to learn from him, and I decided to ask him the question:</description></item><item><title>10 mistakes that java developers make that prevent them from being successful developers</title><link>https://mmarko88.github.io/post/java/teen_mistakes_java_devs/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://mmarko88.github.io/post/java/teen_mistakes_java_devs/</guid><description>Based on my previous experience, I created a list of 10 mistakes that developers made, preventing them from being a great developer. Here is the list:
1. Not writing unit tests Developers that donâ€™t write unit tests produce more bugs from the code they write and maintain. That leads to unstable products and client dissatisfaction.
If you are not familiar with writing unit tests, there are some resources to get started with:</description></item><item><title>How do I become proficient with functional programming in Java</title><link>https://mmarko88.github.io/post/java/how_do_i_become_proficient_with_fp_in_java/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://mmarko88.github.io/post/java/how_do_i_become_proficient_with_fp_in_java/</guid><description>As a Java developer, I always look for ways to improve my coding skills. I heard about functional programming (FP) back when I was a student. Then, FP was not very popular and most developers considered code written using FP to be slow.
Time has changed and today FP is very popular. Some developers are considering it to be the future of how developers write code.
FP is the most useful concept that I learned in the last several years.</description></item><item><title>About Me</title><link>https://mmarko88.github.io/about/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://mmarko88.github.io/about/</guid><description>Currently, I work as Senior Java Developer &amp;amp; Tech Lead at Badin Soft. With more than 8 years of professional experience as a Backend Developer and experience with software development since 2007. Worked with Java Web Services and relational databases on different fintech products. My focus is on helping professional Java developers to optimize their work and solve problems using best practices, new technologies and methodologies by writing clean, secure and performant code in agile environment.</description></item><item><title>Search</title><link>https://mmarko88.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mmarko88.github.io/search/</guid><description/></item></channel></rss>