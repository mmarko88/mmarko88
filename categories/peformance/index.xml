<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>peformance on Professional developer</title><link>www.professionaldev.pro/categories/peformance/</link><description>Recent content in peformance on Professional developer</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 04 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="www.professionaldev.pro/categories/peformance/index.xml" rel="self" type="application/rss+xml"/><item><title>What Is Memory Churn and How to Avoid It in Java</title><link>www.professionaldev.pro/post/java/memory_churn/</link><pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate><guid>www.professionaldev.pro/post/java/memory_churn/</guid><description>
Introduction Modern hardware is very good at predicting the next instructions to be executed. This kind of prediction allows CPUs to do more work in less time. One of the strategies that hardware relies on is data locality. This means that when CPU requests data from main memory, it not only retrieves the requested data, but the hardware also retrieves the data that is stored in proximity to the requested data.</description></item></channel></rss>