<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sql on Professional developer</title><link>https://www.professionaldev.pro/categories/sql/</link><description>Recent content in sql on Professional developer</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 05 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.professionaldev.pro/categories/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>Fastest way to insert the data in MS SQL - Part 1 Hibernate Batching</title><link>https://www.professionaldev.pro/post/java/persist_vs_saveall/</link><pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.professionaldev.pro/post/java/persist_vs_saveall/</guid><description>
Introduction Currently, my team is focused on optimizing the performance of our web services. Our data manipulation tasks primarily rely on Hibernate for interacting with our MS SQL Server database. Hibernate provides a convenient and straightforward API for handling data, particularly for persisting individual or interconnected objects (object graph). However, when it comes to bulk operations, Hibernate's default behavior may not be as efficient. To address this, you can enhance performance by enabling Hibernate batching in the application.</description></item></channel></rss>