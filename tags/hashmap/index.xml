<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hashMap on Professional developer</title><link>https://www.professionaldev.pro/tags/hashmap/</link><description>Recent content in hashMap on Professional developer</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 12 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.professionaldev.pro/tags/hashmap/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Write Classes With Multiple Case Insensitive Strings</title><link>https://www.professionaldev.pro/post/java/case_insenstive_hash_code/</link><pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate><guid>https://www.professionaldev.pro/post/java/case_insenstive_hash_code/</guid><description>
Introduction In a previous article, I discussed how to efficiently store strings in a hash map and search for them without worrying about case sensitivity. I explained how creating a custom wrapper class for String and overriding its hashCode and equals methods can achieve this goal, while ensuring good performance by minimizing the creation of additional strings.
However, this approach may not be ideal if you need to store objects that contain multiple strings.</description></item><item><title>How to Use Case Insensitive String in Hash Map</title><link>https://www.professionaldev.pro/post/java/case_insensitive_string_hashmap/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.professionaldev.pro/post/java/case_insensitive_string_hashmap/</guid><description>
Introduction By default, Microsoft SQL Server processes strings without considering their case sensitivity. Java, unlike Microsoft SQL Server, is case-sensitive which can result in problems. Specifically, on the project I'm working on, there have been numerous bugs caused by the mismatch in case sensitivity.
Generally, there are many situations where case-insensitive strings are necessary. One such example is with email addresses, which are inherently case-insensitive. Therefore, the issue of case sensitivity is not solely related to the mismatch between MS SQL Server and Java, but rather it is a more widespread concern.</description></item></channel></rss>