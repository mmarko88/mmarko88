<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>zip on Professional developer</title><link>www.professionaldev.pro/tags/zip/</link><description>Recent content in zip on Professional developer</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="www.professionaldev.pro/tags/zip/index.xml" rel="self" type="application/rss+xml"/><item><title>Best Practices That You Should Follow When Extracting Zip Archive in Java</title><link>www.professionaldev.pro/post/java/extract_zip_stream_best_practices/</link><pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate><guid>www.professionaldev.pro/post/java/extract_zip_stream_best_practices/</guid><description>
Extracting archive files without controlling resource consumption is security-sensitive and can lead to denial of service.
Our code executes on servers, but you should know that servers have limits. Based on this, check how many hardware resources your code can consume. Resources are CPU, RAM, disk, network... Understand those limits and, based on those limits, put thresholds in your code.
Here are some important thresholds you should put in a code when extracting a zip archive.</description></item></channel></rss>